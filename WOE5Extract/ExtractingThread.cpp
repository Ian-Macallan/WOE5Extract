// ExtractingThread.cpp : implementation file
//

#include "stdafx.h"
#include "WOE5Extract.h"
#include "ExtractingThread.h"
#include "ExtractingDialog.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

//
///////////////////////////////////////////////////////////////////////////////
// CExtractingThread
//
///////////////////////////////////////////////////////////////////////////////
IMPLEMENT_DYNCREATE(CExtractingThread, CWinThread)

//
///////////////////////////////////////////////////////////////////////////////
//
///////////////////////////////////////////////////////////////////////////////
CExtractingThread::CExtractingThread()
{
}

//
///////////////////////////////////////////////////////////////////////////////
//
///////////////////////////////////////////////////////////////////////////////
CExtractingThread::~CExtractingThread()
{
}

//
///////////////////////////////////////////////////////////////////////////////
//
///////////////////////////////////////////////////////////////////////////////
BOOL CExtractingThread::InitInstance()
{
    // TODO:  perform and per-thread initialization here
    m_pMainWnd = &theApp.m_ExtractingDialog;
    
    theApp.m_ExtractingDialog.DoModal ( );
    return TRUE;
}

//
///////////////////////////////////////////////////////////////////////////////
//
///////////////////////////////////////////////////////////////////////////////
int CExtractingThread::ExitInstance()
{
    // TODO:  perform any per-thread cleanup here
    return CWinThread::ExitInstance();
}

//
///////////////////////////////////////////////////////////////////////////////
//
///////////////////////////////////////////////////////////////////////////////
BEGIN_MESSAGE_MAP(CExtractingThread, CWinThread)
    //{{AFX_MSG_MAP(CExtractingThread)
        // NOTE - the ClassWizard will add and remove mapping macros here.
    //}}AFX_MSG_MAP
END_MESSAGE_MAP()

//
///////////////////////////////////////////////////////////////////////////////
// CExtractingThread message handlers
